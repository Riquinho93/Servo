// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WindonsServo.Data;

namespace ServoLibrary.Migrations
{
    [DbContext(typeof(ApplicationDBContent))]
    [Migration("20200124215350_SextaFase")]
    partial class SextaFase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ServoLibrary.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cidade");

                    b.Property<string>("Complemento");

                    b.Property<int>("ProductId");

                    b.Property<string>("Rua");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Address");
                });

            modelBuilder.Entity("ServoLibrary.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ServoLibrary.Model.Telephone", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code");

                    b.Property<string>("number");

                    b.Property<int?>("productsId");

                    b.HasKey("id");

                    b.HasIndex("productsId");

                    b.ToTable("Telephones");
                });

            modelBuilder.Entity("ServoLibrary.Model.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("confirmaPassword");

                    b.Property<string>("email");

                    b.Property<string>("password");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WindonsServo.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Name");

                    b.Property<string>("Profession");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ServoLibrary.Model.Address", b =>
                {
                    b.HasOne("WindonsServo.Model.Product", "Product")
                        .WithOne("Address")
                        .HasForeignKey("ServoLibrary.Model.Address", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ServoLibrary.Model.Telephone", b =>
                {
                    b.HasOne("WindonsServo.Model.Product", "products")
                        .WithMany("Telephones")
                        .HasForeignKey("productsId");
                });

            modelBuilder.Entity("WindonsServo.Model.Product", b =>
                {
                    b.HasOne("ServoLibrary.Model.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("ServoLibrary.Model.User", "User")
                        .WithOne("product")
                        .HasForeignKey("WindonsServo.Model.Product", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
